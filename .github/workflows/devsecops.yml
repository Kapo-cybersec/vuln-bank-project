name: DevSecOps Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  # SCA – Dependency Scanning (Snyk)
  sca:
    name: Dependency Scanning (Snyk)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Snyk Scan
        uses: snyk/actions/python@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --json-file-output=security-results/snyk/scan-results.json

      # --- TU: Generowanie summary do UI ---
      - name: Parse Snyk Results and Generate Markdown Summary
        if: always()
        run: |
          echo "## 🛡️ Snyk Dependency Scan Results" > snyk-summary.md
          if [ -s security-results/snyk/scan-results.json ]; then
            VULNS=$(jq '.vulnerabilities | length' security-results/snyk/scan-results.json)
            if [ "$VULNS" -gt 0 ]; then
              echo "**$VULNS vulnerabilities found!**" >> snyk-summary.md
              jq -r '.vulnerabilities[] | "- *[\(.severity | ascii_upcase)]* \(.title) (\(.id)) in \(.from | join(" > "))"' security-results/snyk/scan-results.json | head -10 >> snyk-summary.md
              if [ "$VULNS" -gt 10 ]; then echo "...and more! See full report in artifact." >> snyk-summary.md; fi
            else
              echo "✅ No vulnerabilities found!" >> snyk-summary.md
            fi
          else
            echo "No results found (scan failed?)." >> snyk-summary.md
          fi

      - name: Add Snyk Summary to GitHub Actions Summary
        if: always()
        run: |
          cat snyk-summary.md >> $GITHUB_STEP_SUMMARY

      - name: Upload Snyk Results
        uses: actions/upload-artifact@v4
        with:
          name: snyk-results
          path: security-results/snyk/scan-results.json
          retention-days: 90

  # Container Scanning (Trivy)
  container_scan:
    name: Container Scanning (Trivy)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker Image
        run: docker build -t vulnerable-bank:latest .

      - name: Run Trivy Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'vulnerable-bank:latest'
          format: 'json'
          output: 'security-results/trivy/scan-results.json'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true
          exit-code: 0

      - name: Parse Trivy Results and Generate Markdown Summary
        if: always()
        run: |
          echo "## 🐳 Trivy Container Scan Results" > trivy-summary.md
          if [ -s security-results/trivy/scan-results.json ]; then
            VULNS=$(jq '[.Results[].Vulnerabilities[]?] | length' security-results/trivy/scan-results.json)
            if [ "$VULNS" -gt 0 ]; then
              echo "**$VULNS vulnerabilities found!**" >> trivy-summary.md
              jq -r '.Results[].Vulnerabilities[]? | "- [\(.Severity)] \(.VulnerabilityID) in \(.PkgName) (\(.Title))"' security-results/trivy/scan-results.json | head -10 >> trivy-summary.md
              if [ "$VULNS" -gt 10 ]; then echo "...and more! See full report in artifact." >> trivy-summary.md; fi
            else
              echo "✅ No vulnerabilities found!" >> trivy-summary.md
            fi
          else
            echo "No results found (scan failed?)." >> trivy-summary.md
          fi

      - name: Add Trivy Summary to GitHub Actions Summary
        if: always()
        run: |
          cat trivy-summary.md >> $GITHUB_STEP_SUMMARY

      - name: Upload Trivy Results
        uses: actions/upload-artifact@v4
        with:
          name: trivy-results
          path: security-results/trivy/scan-results.json
          retention-days: 90
