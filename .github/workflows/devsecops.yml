name: DevSecOps Pipeline 279416

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # SCA – Dependency Scanning
  sca:
    name: Dependency Scanning (Snyk)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create Results Directory
        run: mkdir -p security-results/snyk

      - name: Run Snyk Scan
        uses: snyk/actions/python@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --json-file-output=security-results/snyk/scan-results.json

      - name: Verify Snyk Results
        run: |
          if [ -s security-results/snyk/scan-results.json ]; then
            echo "Snyk scan completed successfully"
          else
            echo "No Snyk vulnerabilities found"
            echo '{"vulnerabilities": []}' > security-results/snyk/scan-results.json
          fi

      - name: Upload Snyk Results
        uses: actions/upload-artifact@v4
        with:
          name: snyk-results
          path: security-results/snyk/scan-results.json
          retention-days: 90

  # SAST – SonarQube Scan
  sast:
    name: SAST (SonarQube)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        continue-on-error: true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectKey=Kapo-cybersec_vuln-bank-project
            -Dsonar.organization=kapo-cybersec
            -Dsonar.sources=.
            -Dsonar.python.version=3.9

      - name: Store SonarQube Results
        run: |
          mkdir -p security-results/sonarqube
          curl -H "Authorization: Bearer ${{ secrets.SONAR_TOKEN }}" \
               "${{ secrets.SONAR_HOST_URL }}/api/issues/search?projectKeys=commando-x_vuln-bank" \
               > security-results/sonarqube/issues.json
          
          if [ -s security-results/sonarqube/issues.json ]; then
            echo "SonarQube results saved successfully"
          else
            echo "No SonarQube issues found"
            echo '{"issues": []}' > security-results/sonarqube/issues.json
          fi

      - name: Upload SonarQube Results
        uses: actions/upload-artifact@v4
        with:
          name: sonar-results
          path: security-results/sonarqube/
          retention-days: 90

   # Secrets Scan – GitLeaks/TruffleHog
  secrets_scan:
    name: Secrets Scan (TruffleHog)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          pip install trufflehog
      - name: Create Results Directory
        run: mkdir -p security-results/trufflehog
      - name: Run TruffleHog Scan
        run: |
          trufflehog git --repo . --json > security-results/trufflehog/scan-results.json
      - name: Verify TruffleHog Results
        run: |
          if [ -s security-results/trufflehog/scan-results.json ]; then
            echo "TruffleHog scan completed successfully"
          else
            echo "No secrets found"
            echo '{"secrets": []}' > security-results/trufflehog/scan-results.json
          fi
      - name: Upload TruffleHog Results
        uses: actions/upload-artifact@v4
        with:
          name: trufflehog-results
          path: security-results/trufflehog/scan-results.json
          retention-days: 90

  # DAST – Dynamic Application Security Testing (OWASP ZAP)
  name: DAST (OWASP ZAP)

  on:
    workflow_dispatch:

  jobs:
    dast:
      runs-on: ubuntu-latest

      services:
        docker:
          image: docker:18.09.7-dind
          options: --privileged

        vuln-bank:
          image: vuln-bank:latest
          ports:
            - 5000:5000

      steps:
        - uses: actions/checkout@v4

        - name: Set up Docker Buildx (optional, if building locally)
          uses: docker/setup-buildx-action@v3

        - name: Build Docker Image (vuln-bank)
          run: docker build -t vuln-bank:latest .

        - name: Run OWASP ZAP Scan
          uses: zaproxy/action-full-scan@v0.5.0
          with:
            target: "http://vuln-bank:5000"
            docker_name: zaproxy/zap-stable
            allow_issue_writing: true

        - name: Verify OWASP ZAP Results
          run: |
            if [ -s zap-report.xml ]; then
              echo "OWASP ZAP scan completed successfully"
            else
              echo "No vulnerabilities found"
              echo "<testsuites></testsuites>" > zap-report.xml
            fi

        - name: Upload OWASP ZAP Results
          uses: actions/upload-artifact@v4
          with:
            name: zap-results
            path: zap-report.xml
            retention-days: 90

  # Container Scanning
  container_scan:
    name: Container Scanning (Trivy)
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:18.09.7-dind  # Docker-in-Docker service
        options: --privileged
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker Image
        run: docker build -t vulnerable-bank:latest .

      - name: Create Results Directory
        run: mkdir -p security-results/trivy

      - name: Run Trivy Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'vulnerable-bank:latest'
          format: 'json'
          output: 'security-results/trivy/scan-results.json'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true
          exit-code: 0

      - name: Verify Trivy Results
        run: |
          if [ -s security-results/trivy/scan-results.json ]; then
            echo "Trivy scan completed successfully"
          else
            echo "No Trivy vulnerabilities found"
            echo '{"Results": []}' > security-results/trivy/scan-results.json
          fi

      - name: Upload Trivy Results
        uses: actions/upload-artifact@v4
        with:
          name: trivy-results
          path: security-results/trivy/scan-results.json
          retention-days: 90